define("format_learningmap/mainlearningmap",["exports","core/reactive","core_course/actions","core/templates"],(function(_exports,_reactive,_actions,_templates){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;
/**
   * Highlight main learningmap for format_learningmap.
   *
   * @module     format_learningmap/mainlearningmap
   * @copyright  2024 ISB Bayern
   * @author     Stefan Hanauska <stefan.hanauska@csg-in.de>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
class _default extends _reactive.BaseComponent{create(descriptor){this.element=descriptor.element,this.reactive=descriptor.reactive,this.cmid=descriptor.cmid,this.isfirstlearningmap=descriptor.isfirstlearningmap}getWatchers(){return[{watch:"cm:deleted",handler:this._updateLearningmap},{watch:"section:updated",handler:this._updateLearningmap},{watch:"cm:added",handler:this._updateLearningmap},{watch:"cm[".concat(this.cmid,"]:deleted"),handler:this.destroy}]}async destroy(){void 0===this._getFirstLearningmap()&&await(0,_templates.render)("format_learningmap/notification",{}).then((html=>(document.querySelector(".format_learningmap-notification").innerHTML=html,!0)))}async _updateLearningmap(){this._isFirstLearningmap()&&!this.isfirstlearningmap?(this.isfirstlearningmap=!0,this.getElement().classList.add("format_learningmap-firstlearningmap"),(0,_actions.refreshModule)(this.element,this.cmid),document.querySelector(".format_learningmap-notification").innerHTML=""):this.isfirstlearningmap&&(this.isfirstlearningmap=!1,this.getElement().classList.remove("format_learningmap-firstlearningmap"),(0,_actions.refreshModule)(this.element,this.cmid))}_isFirstLearningmap(){return this._getFirstLearningmap()==this.cmid}_getFirstLearningmap(){let state=this.reactive.stateManager.state;return this._getCmlist().find((cmid=>"learningmap"==state.cm.get(cmid).module))}_getCmlist(){let state=this.reactive.stateManager.state,cmlist=[];return state.course.sectionlist.forEach((sectionid=>{state.section.get(sectionid).cmlist.forEach((cmid=>{cmlist.push(cmid)}))})),cmlist}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=mainlearningmap.min.js.map