{"version":3,"file":"mainlearningmap.min.js","sources":["../src/mainlearningmap.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Highlight main learningmap for format_learningmap.\n *\n * @module     format_learningmap/mainlearningmap\n * @copyright  2024 ISB Bayern\n * @author     Stefan Hanauska <stefan.hanauska@csg-in.de>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {BaseComponent} from 'core/reactive';\nimport {refreshModule} from 'core_course/actions';\nimport {render as renderTemplate} from 'core/templates';\n\n/**\n * The live updater component.\n */\nexport default class extends BaseComponent {\n    create(descriptor) {\n        this.element = descriptor.element;\n        this.reactive = descriptor.reactive;\n        this.cmid = descriptor.cmid;\n        this.isfirstlearningmap = descriptor.isfirstlearningmap;\n    }\n\n    getWatchers() {\n        const watchers = [\n            {watch: `cm:deleted`, handler: this._updateLearningmap},\n            {watch: `section:updated`, handler: this._updateLearningmap},\n            {watch: `cm:added`, handler: this._updateLearningmap},\n            {watch: `cm[${this.cmid}]:deleted`, handler: this.destroy},\n        ];\n        return watchers;\n    }\n\n    async destroy() {\n        if (this._getFirstLearningmap() === undefined) {\n            await renderTemplate('format_learningmap/notification', {}).then((html) => {\n                document.querySelector('.format_learningmap-notification').innerHTML = html;\n                return true;\n            });\n        }\n    }\n\n    async _updateLearningmap() {\n        if (this._isFirstLearningmap() && !this.isfirstlearningmap) {\n            this.isfirstlearningmap = true;\n            this.getElement().classList.add('format_learningmap-firstlearningmap');\n            refreshModule(this.element, this.cmid);\n            document.querySelector('.format_learningmap-notification').innerHTML = '';\n        } else {\n            if (this.isfirstlearningmap) {\n                this.isfirstlearningmap = false;\n                this.getElement().classList.remove('format_learningmap-firstlearningmap');\n                refreshModule(this.element, this.cmid);\n            }\n        }\n    }\n\n    _isFirstLearningmap() {\n        let firstLearningmap = this._getFirstLearningmap();\n        return firstLearningmap == this.cmid;\n    }\n\n    _getFirstLearningmap() {\n        let state = this.reactive.stateManager.state;\n        let cmlist = this._getCmlist();\n        return cmlist.find((cmid) => {\n            let cm = state.cm.get(cmid);\n            return (cm.module == 'learningmap');\n        });\n    }\n\n    _getCmlist() {\n        let state = this.reactive.stateManager.state;\n        let cmlist = [];\n        state.course.sectionlist.forEach((sectionid) => {\n            let section = state.section.get(sectionid);\n            section.cmlist.forEach((cmid) => {\n                cmlist.push(cmid);\n            });\n        });\n        return cmlist;\n    }\n}\n"],"names":["BaseComponent","create","descriptor","element","reactive","cmid","isfirstlearningmap","getWatchers","watch","handler","this","_updateLearningmap","destroy","undefined","_getFirstLearningmap","then","html","document","querySelector","innerHTML","_isFirstLearningmap","getElement","classList","add","remove","state","stateManager","_getCmlist","find","cm","get","module","cmlist","course","sectionlist","forEach","sectionid","section","push"],"mappings":";;;;;;;;;uBA8B6BA,wBACzBC,OAAOC,iBACEC,QAAUD,WAAWC,aACrBC,SAAWF,WAAWE,cACtBC,KAAOH,WAAWG,UAClBC,mBAAqBJ,WAAWI,mBAGzCC,oBACqB,CACb,CAACC,mBAAqBC,QAASC,KAAKC,oBACpC,CAACH,wBAA0BC,QAASC,KAAKC,oBACzC,CAACH,iBAAmBC,QAASC,KAAKC,oBAClC,CAACH,mBAAaE,KAAKL,kBAAiBI,QAASC,KAAKE,+BAMlBC,IAAhCH,KAAKI,8BACC,qBAAe,kCAAmC,IAAIC,MAAMC,OAC9DC,SAASC,cAAc,oCAAoCC,UAAYH,MAChE,gCAMXN,KAAKU,wBAA0BV,KAAKJ,yBAC/BA,oBAAqB,OACrBe,aAAaC,UAAUC,IAAI,kEAClBb,KAAKP,QAASO,KAAKL,MACjCY,SAASC,cAAc,oCAAoCC,UAAY,IAEnET,KAAKJ,0BACAA,oBAAqB,OACrBe,aAAaC,UAAUE,OAAO,kEACrBd,KAAKP,QAASO,KAAKL,OAK7Ce,6BAC2BV,KAAKI,wBACDJ,KAAKL,KAGpCS,2BACQW,MAAQf,KAAKN,SAASsB,aAAaD,aAC1Bf,KAAKiB,aACJC,MAAMvB,MAEK,eADZoB,MAAMI,GAAGC,IAAIzB,MACX0B,SAInBJ,iBACQF,MAAQf,KAAKN,SAASsB,aAAaD,MACnCO,OAAS,UACbP,MAAMQ,OAAOC,YAAYC,SAASC,YAChBX,MAAMY,QAAQP,IAAIM,WACxBJ,OAAOG,SAAS9B,OACpB2B,OAAOM,KAAKjC,YAGb2B"}